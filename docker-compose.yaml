services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  catalog-api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      ENV: "docker"
      ADDR: ":8080"
      DATABASE_URL: "postgres://catalog_user:catalog_password@db:5432/kong_catalog?sslmode=disable"
      MAX_PAGE_SIZE: "100"
      DB_MAX_CONNECTIONS: "20"
      DB_MIN_CONNECTIONS: "5"
      DB_MAX_CONN_LIFETIME: "1h"
      DB_MAX_CONN_IDLE_TIME: "15m"
      DB_CONNECT_TIMEOUT: "10s"
      DB_HEALTH_CHECK_PERIOD: "1m"
      DB_STATEMENT_TIMEOUT: "30s"
      DB_TLS_MODE: "disable"
      VALID_API_KEYS: "docker-api-key,production-key,admin-key"
      # Database setup variables
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_USER: "catalog_user"
      DB_NAME: "kong_catalog"
      PGPASSWORD: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "8080:8080"
    volumes:
      - ./docker:/app/docker

volumes:
  postgres_data:
